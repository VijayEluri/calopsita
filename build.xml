<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="http://ivyrep.jayasoft.org/ivy-doc.xsl"?>
<project name="Calopsita" default="integration-tests">

	<description>Build full do Calopsita</description>
	<property name="localhost" value="localhost"/>
	<property name="selenium.hub" value="${localhost}"/>
	
	<property file="build.properties" />
	<property name="war.file" value="${war.filename}.war" />
	<path id="libs.classpath" path=".">
		<fileset dir="${libs.dir}">
			<include name="*.jar" />
		</fileset>
	</path>
	<path id="test.libs.classpath" path=".">
		<fileset dir="${test.lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>
	<path id="servlet-api.classpath">
        <fileset dir="${common.dir}">
            <include name="*.jar" />
        </fileset>
    </path>
	<path id="artifacts.classpath">
        <fileset dir="${artifacts.lib.dir}">
            <include name="**/*.jar" />
        </fileset>
	 </path>
	<path id="compile.classpath">
		<path refid="servlet-api.classpath" />
		<path refid="libs.classpath" />
	</path>
	<path id="tests.classpath">
		<pathelement path="${tmp.classes.dir}" />
		<!--<pathelement path="${tests.resources.dir}" />-->
		<pathelement path="${resources.dir}" />
		<path refid="test.libs.classpath" />
		<fileset dir="${ant.lib.dir}">
			<include name="*.jar"/>
		</fileset>
		<path refid="compile.classpath" />
	</path>

	<path id="integration-test.classpath">
		<path refid="libs.classpath" />
		<path refid="tests.classpath" />
		<pathelement path="${tmp.test-classes.dir}" />
	</path>
	
	<taskdef classpathref="artifacts.classpath" resource="tasks.properties" />

	<target name="compile" depends="prepare" description="--> compiles the classes">
		<javac  destdir="${tmp.classes.dir}" srcdir="${src.dir}" classpathref="compile.classpath" debug="true" encoding="UTF-8" />
		<copy todir="${tmp.classes.dir}">
			<fileset dir="${resources.dir}" />
		</copy>
	
		<javac destdir="${tmp.test-classes.dir}" srcdir="${test-src.dir}" classpathref="tests.classpath" debug="true" encoding="UTF-8" />
		<javac destdir="${tmp.test-classes.dir}" srcdir="${test-integration.dir}" classpathref="integration-test.classpath" debug="true" encoding="UTF-8" />
		<copy todir="${tmp.test-classes.dir}">
			<fileset dir="${tests.resources.dir}" />
		</copy>

	</target>
	<target name="test" depends="compile" description="--> run the tests">
		<fileset dir="${tmp.test-classes.dir}" id="unittests.fileset">
			<include name="**/*Test.class" />
			<exclude name="**/Abstract*Test.class" />
		</fileset>

		<!--<delete file="cobertura.ser" verbose="false" />

		<cobertura-instrument todir="${instrumentation.dir}">
			<fileset dir="${tmp.classes.dir}" includes="**/*.class" />
		</cobertura-instrument>-->

		<echo message="Running unit tests..." />
		<junit fork="yes" forkmode="once" printsummary="false" showoutput="true" failureproperty="failed-test">
			<sysproperty key="net.sourceforge.cobertura.datafile" file="cobertura.ser" />

			<classpath>
				<pathelement path="${instrumentation.dir}" />
				<pathelement path="${tmp.test-classes.dir}" />
			</classpath>
			<classpath refid="tests.classpath" />

			<formatter type="xml" />
			<batchtest fork="yes" todir="${artifacts.dir}/reports">
				<fileset refid="unittests.fileset" />
			</batchtest>
		</junit>
		<!--<antcall target="cobertura-report" />-->
		<antcall target="test-report" />
	</target>

	<target name="war" depends="compile" description="--> generate project's war">
		<delete file="${artifacts.dir}/${war.file}" />
		<copy todir="${tmp.classes.dir}">
			<fileset dir="${resources.dir}" />
			<fileset dir="${tests.resources.dir}" />
		</copy>
		<move tofile="${tmp.classes.dir}/hibernate.cfg.xml" file="${tmp.classes.dir}/hibernate.cfg.test.xml"/>
		
		<war destfile="${artifacts.dir}/${war.file}" webxml="${webapp.dir}/WEB-INF/web.xml" compress="true">
			<fileset dir="${webapp.dir}">
				<exclude name="WEB-INF/web.xml" />
				<exclude name="**/servlet*.jar" />
				<exclude name="jstl*.jar" if="staging" />
				<exclude name="standard*.jar" if="staging" />
			</fileset>
			<classes dir="${tmp.classes.dir}" />
			<!--lib dir="${libs.dir}">
				<exclude name="servlet*.jar" />
			</lib-->
		</war>
	</target>

	<target name="integration-tests" depends="war, hsqldb, start-jettys" description="--> runs integration tests">
		<echo message="Running integration tests..." />
		<property name="pool.size" value="2"/>
		<property name="server.port" value="9095"/>
		<property name="server.context" value="/calopsita"/>
		<property name="server.count" value="3"/>
		<junit fork="on" showoutput="false" failureproperty="failed-test" timeout="900000">
			<classpath refid="integration-test.classpath" />
			<sysproperty key="server.host" value="${localhost}" />
			<sysproperty key="server.timeout" value="20000" />
			<sysproperty key="server.port" value="${server.port}" />
			<sysproperty key="server.count" value="${server.count}" />
			<sysproperty key="server.context" value="${server.context}" />
			<sysproperty key="database.port" value="9005" />
			<sysproperty key="pool.size" value="${pool.size}" />
			<sysproperty key="test.classes" value="${tmp.test-classes.dir}" />
			<formatter type="xml" />
			<batchtest fork="yes" todir="${artifacts.dir}/reports">
				<fileset dir="${tmp.test-classes.dir}" id="unittests.fileset">
					<include name="**/*Story.class" />
					<exclude name="**/DefaultStory.class" />
				</fileset>
			</batchtest>
		</junit>
		<antcall target="test-report" />
	</target>

	<target name="test-report">
		<junitreport todir="${artifacts.dir}/">
			<fileset dir="${artifacts.dir}/reports">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${artifacts.dir}/junit" />
		</junitreport>
		<fail if="failed-test" message="Testes unitarios com problema!" />
	</target>

	<target name="cobertura-report" description="--> generate project's artifacts">
		<cobertura-report format="html" destdir="${artifacts.dir}/cobertura">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
				<exclude name="**/*Test.java" />
			</fileset>
		</cobertura-report>
	</target>

	<target name="prepare" description="--> prepares directories">
		<mkdir dir="${tmp.dir}" />
		<mkdir dir="${tmp.webinf.dir}" />
		<mkdir dir="${tmp.classes.dir}" />
		<mkdir dir="${tmp.test-classes.dir}" />
		<mkdir dir="${artifacts.dir}" />
		<mkdir dir="${artifacts.dir}/reports" />
		<mkdir dir="${artifacts.dir}/cobertura" />
		<mkdir dir="${instrumentation.dir}" />
	</target>

	<target name="clean" description="--> delete build artifacts">
		<delete file="${war.file}" />
		<delete dir="${artifacts.dir}" />
		<delete dir="${tmp.dir}" />
	</target>
	
	<target name="hsqldb">
		<echo message="Starting HSQLDB on port 9005" />
		<java classpath="${libs.dir}/hsqldb-1.8.0.7.jar" classname="org.hsqldb.Server" failonerror="true">
			<arg line="-database.0 mem:calopsita" />
			<arg line="-dbname.0 calopsita" />
			<arg line="-port 9005" />
		</java>
	</target>
	
	<target name="manualHsqldb">
		<echo message="Starting HSQLDB on port 9005" />
		<java classpath="${libs.dir}/hsqldb-1.8.0.7.jar" classname="org.hsqldb.Server" failonerror="true">
			<arg line="-database.0 mem:calopsita" />
			<arg line="-dbname.0 calopsita" />
			<arg line="-port 9005" />
		</java>
		<input message="Press Enter to Stop" />
	</target>
	
	<target name="jetty" depends="clean, war, hsqldb, start-jettys">
		<input message="Press Enter to Stop" />
	</target>
	
	<macrodef name="jetty">
        <attribute name="port" default="9095" />
        <attribute name="databasePort" default="9005" />
        <sequential>
            <taskdef name="jetty-start" classname="br.com.caelum.calopsita.tasks.JettyStartTask">
                <classpath>
					<path refid="servlet-api.classpath" />
                    <fileset dir="${ant.lib.dir}">
                    	<include name="jetty*.jar"/>
                    </fileset>
                    <pathelement path="${tmp.test-classes.dir}" />
                </classpath>
            </taskdef>
            <jetty-start waitForShutdown="false" port="@{port}" databasePort="@{databasePort}">
                <context war="${artifacts.dir}/${war.file}" classes="${tmp.classes.dir}" base="${webapp.dir}" lib="${libs.dir}" context="/calopsita" />
            </jetty-start>
        </sequential>
    </macrodef>

    <target name="start-jettys" description="--> runs all jettys instances">
        <jetty port="9095" databasePort="9005" />
        <echo message="Jettys started" />
    </target>

	<property name="staging.ip" value="localhost" />
	<property name="staging.port" value="8080" />
	<property name="staging.user" value="staging" />
	<target name="staging">
		<echo message="http://${staging.ip}:${staging.port}/calopsita"/>
		<condition property="can.stage" value="anything">
			<socket server="${staging.ip}" port="22"/>
		</condition>
		<antcall target="do-stage" />
	</target>
	
	<target name="do-stage" if="can.stage">
		<echo message="Copying stuff"></echo>
		<sshexec host="${staging.ip}" username="${staging.user}" password="${staging.user}" command="jetty/bin/jetty.sh stop" failonerror="false"/>
		<scp file="${artifacts.dir}/${war.file}" todir="${staging.user}:${staging.user}@${staging.ip}:~/${war.filename}-staging.war" failonerror="false"/>
		<scp file="${basedir}/deploy.sh" todir="${staging.user}:${staging.user}@${staging.ip}:~/deploy.sh" failonerror="false"/>
		<sshexec host="${staging.ip}" username="${staging.user}" password="${staging.user}" command="sh ~/deploy.sh &amp;" failonerror="false" timeout="100000"/>
	</target>
</project>
